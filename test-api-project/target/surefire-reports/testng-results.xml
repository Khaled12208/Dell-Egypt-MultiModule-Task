<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="27" passed="21" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-22T20:03:10 EET" name="Surefire suite" finished-at="2022-03-22T20:03:37 EET" duration-ms="27317">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-03-22T20:03:10 EET" name="Surefire test" finished-at="2022-03-22T20:03:37 EET" duration-ms="27317">
      <class name="com.multimodule.apitesting.runners.Regression">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:10 EET" name="setUpClass" finished-at="2022-03-22T20:03:11 EET" duration-ms="1485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setUpCucumber()[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:11 EET" name="setUpCucumber" finished-at="2022-03-22T20:03:12 EET" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpCucumber -->
        <test-method is-config="true" signature="setupClassName(org.testng.ITestContext)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="setupClassName" finished-at="2022-03-22T20:03:12 EET" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3caafa67]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClassName -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:24 EET" duration-ms="12334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User will try to delete a product using a valid category ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Delete a category using the category ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:23 EET" duration-ms="11165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["get all available Categories"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get All Categories]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="7639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get a Category with valid Category id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Category by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get category with invalid category ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Category by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get category with invalid category ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Category by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get category with invalid category ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Category by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get category with invalid category ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get Category by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:22 EET" duration-ms="9822" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add the category with valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new category]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path isEmpty() doesn't match.
Expected: is <true>
  Actual: <false>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path isEmpty() doesn't match.
Expected: is <true>
  Actual: <false>

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:262)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:109)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.multimodule.apitesting.driver.Assertions.emptyBody(Assertions.java:76)
at com.multimodule.apitesting.stepDefinitions.testSteps.category.PostNewCategory.new_category_response_body_should_be_is_empty(PostNewCategory.java:58)
at ✽.new category response body  should be is empty(file:///C:/Users/Khaled%20M%20Farh/Downloads/test-multi-module-project/test-api-project/src/test/resources/featuers/../featuers/categories/PostNewCategory.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="6894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add category with invalid data request body parameters and valid content type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new category]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="6894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add category with invalid data request body parameters and valid content type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new category]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="6892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add category with invalid data request body parameters and valid content type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new category]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:23 EET" duration-ms="11003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to update the category with valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[update a category data]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:23 EET" duration-ms="10985" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to update the category with invalid data Missing product mandatory items"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[update a category data]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor320.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.multimodule.apitesting.driver.Assertions.statusCode(Assertions.java:52)
at com.multimodule.apitesting.stepDefinitions.testSteps.category.UpdateCategoryByID.update_category_response_status_code_is(UpdateCategoryByID.java:41)
at ✽.update category response status code is "400"(file:///C:/Users/Khaled%20M%20Farh/Downloads/test-multi-module-project/test-api-project/src/test/resources/featuers/../featuers/categories/UpdateCategoryByID.feature:22)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:24 EET" duration-ms="11972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User will try to delete a product using a valid product ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Delete a product using the product ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="7323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["get all available product"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get All Products]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="7168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get a product with valid product id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get One Product by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get product with invalid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get One Product by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get product with invalid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get One Product by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get product with invalid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get One Product by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:21 EET" duration-ms="8569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to get product with invalid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Get One Product by ID]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:22 EET" duration-ms="10222" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add the product with valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new product]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path isEmpty() doesn't match.
Expected: is <true>
  Actual: <false>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path isEmpty() doesn't match.
Expected: is <true>
  Actual: <false>

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:262)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:109)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.multimodule.apitesting.driver.Assertions.emptyBody(Assertions.java:76)
at com.multimodule.apitesting.stepDefinitions.testSteps.products.PostNewProduct.response_body_is_empty(PostNewProduct.java:52)
at ✽.new product response body  should be is empty(file:///C:/Users/Khaled%20M%20Farh/Downloads/test-multi-module-project/test-api-project/src/test/resources/featuers/../featuers/products/PostNewProduct.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="6861" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add the product with valid data and invalid content type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new product]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="6860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add the product with invalid data request body and valid content type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new product]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:19 EET" duration-ms="6851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to add the product with invalid data request body and valid content type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to add a new product]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:23 EET" duration-ms="10935" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to update the product with valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to update a product data]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
warning: the following keywords are unknown and will be ignored: [image, manufacturer, model, name, price, shipping, upc, url]
    level: "warning"
    schema: {"loadingURI":"#","pointer":""}
    domain: "syntax"
    ignored: ["image","manufacturer","model","name","price","shipping","upc","url"]
error: instance type (object) does not match any allowed primitive type (allowed: ["string"])
    level: "error"
    schema: {"loadingURI":"#","pointer":""}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "object"
    expected: ["string"]

  Actual: {"id":312290,"name":"1","type":"Product Patched","price":1222,"upc":"string","shipping":2666,"description":"Product Patched","manufacturer":"Test product","model":"Product Patched","url":"Test product","image":"Test product","createdAt":"2016-11-17T17:58:03.298Z","updatedAt":"2022-03-22T18:03:18.969Z"}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
warning: the following keywords are unknown and will be ignored: [image, manufacturer, model, name, price, shipping, upc, url]
    level: "warning"
    schema: {"loadingURI":"#","pointer":""}
    domain: "syntax"
    ignored: ["image","manufacturer","model","name","price","shipping","upc","url"]
error: instance type (object) does not match any allowed primitive type (allowed: ["string"])
    level: "error"
    schema: {"loadingURI":"#","pointer":""}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "object"
    expected: ["string"]

  Actual: {"id":312290,"name":"1","type":"Product Patched","price":1222,"upc":"string","shipping":2666,"description":"Product Patched","manufacturer":"Test product","model":"Product Patched","url":"Test product","image":"Test product","createdAt":"2016-11-17T17:58:03.298Z","updatedAt":"2022-03-22T18:03:18.969Z"}

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:99)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.multimodule.apitesting.driver.Assertions.bodySchema(Assertions.java:44)
at com.multimodule.apitesting.stepDefinitions.testSteps.products.UpdateProductByID.updateProductData_validBody_BodyMatches(UpdateProductByID.java:56)
at ✽.update product response body matches "scenarios/updateproduct/UpdateProduct_AllFields-response.json"(file:///C:/Users/Khaled%20M%20Farh/Downloads/test-multi-module-project/test-api-project/src/test/resources/featuers/../featuers/products/UpdateProductByID.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:23 EET" duration-ms="10953" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to update the product with valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to update a product data]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
warning: the following keywords are unknown and will be ignored: [image, manufacturer, model, name, price, shipping, upc, url]
    level: "warning"
    schema: {"loadingURI":"#","pointer":""}
    domain: "syntax"
    ignored: ["image","manufacturer","model","name","price","shipping","upc","url"]
error: instance type (object) does not match any allowed primitive type (allowed: ["string"])
    level: "error"
    schema: {"loadingURI":"#","pointer":""}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "object"
    expected: ["string"]

  Actual: {"id":312290,"name":"1","type":"Product Patched","price":1222,"upc":"string","shipping":2666,"description":"Product Patched","manufacturer":"Test product","model":"Product Patched","url":"Test product","image":"Test product","createdAt":"2016-11-17T17:58:03.298Z","updatedAt":"2022-03-22T18:03:18.969Z"}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
warning: the following keywords are unknown and will be ignored: [image, manufacturer, model, name, price, shipping, upc, url]
    level: "warning"
    schema: {"loadingURI":"#","pointer":""}
    domain: "syntax"
    ignored: ["image","manufacturer","model","name","price","shipping","upc","url"]
error: instance type (object) does not match any allowed primitive type (allowed: ["string"])
    level: "error"
    schema: {"loadingURI":"#","pointer":""}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "object"
    expected: ["string"]

  Actual: {"id":312290,"name":"1","type":"Product Patched","price":1222,"upc":"string","shipping":2666,"description":"Product Patched","manufacturer":"Test product","model":"Product Patched","url":"Test product","image":"Test product","createdAt":"2016-11-17T17:58:03.298Z","updatedAt":"2022-03-22T18:03:18.969Z"}

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:99)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.multimodule.apitesting.driver.Assertions.bodySchema(Assertions.java:44)
at com.multimodule.apitesting.stepDefinitions.testSteps.products.UpdateProductByID.updateProductData_validBody_BodyMatches(UpdateProductByID.java:56)
at ✽.update product response body matches "scenarios/updateproduct/UpdateProduct_MandatoryFields-response.json"(file:///C:/Users/Khaled%20M%20Farh/Downloads/test-multi-module-project/test-api-project/src/test/resources/featuers/../featuers/products/UpdateProductByID.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:12 EET" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-22T20:03:23 EET" duration-ms="10938" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User try to update the product with invalid data Missing product mandatory items"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Wants to update a product data]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$2.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:684)
at jdk.internal.reflect.GeneratedMethodAccessor294.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:127)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor320.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.multimodule.apitesting.driver.Assertions.statusCode(Assertions.java:52)
at com.multimodule.apitesting.stepDefinitions.testSteps.products.UpdateProductByID.updateProductData_validBody_StatusCode(UpdateProductByID.java:44)
at ✽.update product response status code is "400"(file:///C:/Users/Khaled%20M%20Farh/Downloads/test-multi-module-project/test-api-project/src/test/resources/featuers/../featuers/products/UpdateProductByID.feature:24)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.multimodule.apitesting.runners.Regression@2d9d4f9d]" started-at="2022-03-22T20:03:24 EET" name="tearDownClass" finished-at="2022-03-22T20:03:37 EET" duration-ms="13139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.multimodule.apitesting.runners.Regression -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
